{"version":3,"sources":["components/Intro.js","components/Experiences.js","components/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","className","Experiences","experiences","exps","map","exp","Col","xs","position","Row","lg","href","link","undefined","target","rel","company","date","achievements","a","id","Container","size","Projects","projects","projs","proj","name","github","icon","faGithub","description","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mjHAceA,EAXD,WACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,8BACA,qBAAKA,UAAU,qBAAf,mD,wBCoCSC,G,MAtCK,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACIC,KAAI,SAACC,GAC5B,OACE,eAACC,EAAA,EAAD,CAAkBC,GAAI,GAAtB,UACE,6BAAKF,EAAIG,WAET,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,CAAKI,GAAI,EAAT,SACE,mBACEC,KAAMN,EAAIO,KAAOP,EAAIO,UAAOC,EAC5BC,OAAO,SACPC,IAAI,aAHN,SAKE,oBAAIf,UAAU,WAAd,SAA0BK,EAAIW,cAGlC,cAACV,EAAA,EAAD,CAAKI,GAAI,EAAT,SACE,mBAAGV,UAAU,WAAb,SAAyBK,EAAIY,YAGjC,6BACGZ,EAAIa,aAAad,KAAI,SAACe,GAAD,OACpB,6BAAKA,WAnBDd,EAAIe,OA0BlB,OACE,eAACC,EAAA,EAAD,CAAWrB,UAAU,YAArB,UACE,oBAAIA,UAAU,kBAAd,yBACA,oBAAIsB,KAAK,MACT,cAACb,EAAA,EAAD,UAAMP,S,gBCCGqB,EAlCE,SAAC,GAAe,IACzBC,EADwB,EAAZC,MACKrB,KAAI,SAACsB,GAC1B,OACE,eAACpB,EAAA,EAAD,CAAmBC,GAAI,GAAvB,UACE,mBACEI,KAAMe,EAAKd,KAAOc,EAAKd,UAAOC,EAC9BC,OAAO,SACPC,IAAI,aAHN,SAKE,oBAAIf,UAAU,0BAAd,SAAyC0B,EAAKC,SAE/CD,EAAKE,OACJ,mBAAGjB,KAAMe,EAAKE,OAAQ5B,UAAU,sBAAhC,SACE,cAAC,IAAD,CAAiB6B,KAAMC,IAAU9B,UAAU,sBAE3C,KACJ,6BACG0B,EAAKK,YAAY3B,KAAI,SAACe,GAAD,OACpB,6BAAKA,WAfDO,EAAKN,OAsBnB,OACE,eAACC,EAAA,EAAD,CAAWrB,UAAU,YAArB,UACE,oBAAIA,UAAU,kBAAd,sBACA,oBAAIsB,KAAK,MACT,cAACb,EAAA,EAAD,UAAMe,Q,wBChBGQ,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaG,KAAMD,IACnB,cAAC,EAAD,CAAUuB,MAAOD,QCDRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a653914.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/intro.scss\";\n\nconst Intro = () => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"typewriter-text\">Hey, I'm Gautham</div>\n      <div className=\"intro-summary px-3\">\n        Web Developer & Software Engineer\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nimport \"../styles/body.scss\";\n\nconst Experiences = ({ exps }) => {\n  const experiences = exps.map((exp) => {\n    return (\n      <Col key={exp.id} xs={12}>\n        <h4>{exp.position}</h4>\n\n        <Row>\n          <Col lg={9}>\n            <a\n              href={exp.link ? exp.link : undefined}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <h5 className=\"subtitle\">{exp.company}</h5>\n            </a>\n          </Col>\n          <Col lg={3}>\n            <p className=\"text-end\">{exp.date}</p>\n          </Col>\n        </Row>\n        <ul>\n          {exp.achievements.map((a) => (\n            <li>{a}</li>\n          ))}\n        </ul>\n      </Col>\n    );\n  });\n\n  return (\n    <Container className=\"px-3 pb-4\">\n      <h1 className=\"secondary_color\">Experiences</h1>\n      <hr size=\"4\" />\n      <Row>{experiences}</Row>\n    </Container>\n  );\n};\n\nexport default Experiences;\n","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Projects = ({ projs }) => {\n  const projects = projs.map((proj) => {\n    return (\n      <Col key={proj.id} xs={12}>\n        <a\n          href={proj.link ? proj.link : undefined}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <h5 className=\"d-inline-block subtitle\">{proj.name}</h5>\n        </a>\n        {proj.github ? (\n          <a href={proj.github} className=\"d-inline-block px-2\">\n            <FontAwesomeIcon icon={faGithub} className=\"secondary_color\" />\n          </a>\n        ) : null}\n        <ul>\n          {proj.description.map((a) => (\n            <li>{a}</li>\n          ))}\n        </ul>\n      </Col>\n    );\n  });\n\n  return (\n    <Container className=\"px-3 pb-4\">\n      <h1 className=\"secondary_color\">Projects</h1>\n      <hr size=\"4\" />\n      <Row>{projects}</Row>\n    </Container>\n  );\n};\n\nexport default Projects;\n","import Intro from \"./components/Intro\";\nimport Experiences from \"./components/Experiences\";\nimport Projects from \"./components/Projects\";\n\nimport \"./App.scss\";\nimport experiences from \"./data/experiences.json\";\nimport projects from \"./data/projects.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Intro></Intro>\n      <Experiences exps={experiences}></Experiences>\n      <Projects projs={projects}></Projects>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}